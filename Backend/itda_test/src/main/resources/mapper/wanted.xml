<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssafy.wanted">

	<select id="getWantedAll" resultType="java.lang.String">
		select wid from wanted_t
		order by startDate asc
	</select>

	<select id="getCompanyId" parameterType="java.lang.String"
		resultType="java.lang.String">
		select cid from wanted_t where wid = #{wid}
	</select>

	<select id="getWantedInfo" parameterType="java.lang.String"
		resultType="com.ssafy.itda.itda_test.model.Wanted">
		select wid, wantedTitle, active, startDate, endDate,
		vcnt,
		cid, detail, jobType
		from wanted_t where wid = #{wid}
	</select>

	<select id="getCompanyInfo" parameterType="java.lang.String"
		resultType="com.ssafy.itda.itda_test.model.Company">
		select cid, corpNm, totPsncnt, busiSize, yrSalesAmt,
		corpAddr, homePg, busiCont, logo
		from company_t where cid = #{cid}
	</select>

	<select id="getWantedByRecent" resultType="java.lang.String">
		select wid from
		wanted_t where active = 1 order by startDate desc limit 24
	</select>

	<select id="getWantedByCloseEnd" resultType="java.lang.String">
		select wid from
		wanted_t where active = 1 and endDate >= now() order by endDate asc
		limit 10
	</select>

	<select id="getWantedByView" resultType="java.lang.String">
		select wid from wanted_t
		where active = 1 order by vcnt desc limit 10
	</select>

	<select id="isScraped"
		parameterType="com.ssafy.itda.itda_test.model.Scrap"
		resultType="com.ssafy.itda.itda_test.model.Scrap">
		select uid, wid from scrap_t where uid= #{uid} and wid =
		#{wid}
	</select>

	<insert id="scrap"
		parameterType="com.ssafy.itda.itda_test.model.Scrap">
		insert into scrap_t(uid, wid) values(#{uid}, #{wid})
	</insert>

	<delete id="unScrap"
		parameterType="com.ssafy.itda.itda_test.model.Scrap">
		delete from scrap_t where uid = #{uid} and wid = #{wid}
	</delete>

	<insert id="createWanted"
		parameterType="com.ssafy.itda.itda_test.model.Wanted">
		insert into wanted_t(wid, wantedTitle, active,
		startDate, endDate, cid, detail, jobType)
		values(#{wid},
		#{wantedTitle},
		#{active}, from_unixtime(#{startDate}),
		from_unixtime(#{endDate}),
		#{cid}, #{detail}, #{jobType})
	</insert>

	<!-- <select id="getInputWanted" parameterType="com.ssafy.itda.itda_test.model.Wanted" -->
	<!-- resultType="java.lang.String"> -->
	<!-- SELECT WID FROM WANTED_T WHERE wantedTitle = #{wantedTitle} AND startDate 
		= #{startDate} -->
	<!-- AND endDate = #{endDate} AND CID = #{cid} ORDER BY WID DESC LIMIT 1 -->
	<!-- </select> -->

	<delete id="deleteWanted" parameterType="java.lang.String">
		delete from wanted_t
		where wid = #{wid}
	</delete>

	<insert id="updateWanted"
		parameterType="com.ssafy.itda.itda_test.model.Wanted">
		update wanted_t set wantedTitle = #{wantedTitle},
		startDate = #{startDate}, endDate = #{endDate},
		detail = #{detail}, cid
		= #{cid}, jobType = #{jobType} where wid = #{wid}
	</insert>

	<select id="getStackInfo" parameterType="java.lang.String"
		resultType="com.ssafy.itda.itda_test.model.Stack">
		select s.sid, s.tname
		from wantedStack_t as ws join stack_t
		as
		s on ws.sid = s.sid
		where ws.wid = #{wid}
	</select>

	<select id="getWantedStackInfo" parameterType="java.lang.String"
		resultType="com.ssafy.itda.itda_test.model.Stack">
		select distinct s.sid, s.tname
		from wanted_t as w,
		wantedstack_t as ws, stack_t as s
		where w.wid = ws.wid and ws.sid =
		s.sid and w.wid = #{wid}
	</select>

	<select id="getWantedByStack" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		select distinct w.wid from mystack_t as ms, wantedstack_t
		as ws, wanted_t as w
		where ms.uid = #{uid} and ms.sid = ws.sid order by
		endDate limit 10
	</select>

	<select id="getWantedByScrap" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		select w.wid from scrap_t as s, wanted_t as w
		where s.uid =
		#{uid} and s.wid = w.wid ORDER BY endDate LIMIT 10
	</select>

	<update id="updateVcnt" parameterType="java.lang.String">
		update wanted_t set vcnt =
		vcnt + 1 where wid = #{wid}
	</update>

	<update id="updateCheckExpire">
		UPDATE wanted_t SET active = 0 WHERE endDate &lt;
		NOW()
	</update>

	<update id="updateCheckOpen">
		UPDATE wanted_t SET active = 1 WHERE startDate &gt;
		NOW()
	</update>

	<select id="getWantedBySearch" parameterType="java.lang.String"
		resultType="java.lang.String">
		SELECT DISTINCT wid
		FROM wanted_t AS w
			LEFT JOIN
				wantedStack_t AS ws ON w.wid = ws.wid
			LEFT JOIN
				company_t AS c ON w.cid = c.cid
			LEFT JOIN
				stack_t AS s ON ws.sid = s.sid
		WHERE
			MATCH (tname) AGAINST ('#{keyword}' )
				OR MATCH (wantedTitle) AGAINST ('#{keyword}' )
				OR corpNm LIKE '%#{keyword}%'
				OR wantedTitle LIKE '%#{keyword}%'
				OR tname LIKE '%#{keyword}%'
	</select>
</mapper>
